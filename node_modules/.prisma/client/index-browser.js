
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal,
  objectEnumValues,
  makeStrictEnum,
  Public,
  getRuntime,
  skip
} = require('@prisma/client/runtime/index-browser.js')


const Prisma = {}

exports.Prisma = Prisma
exports.$Enums = {}

/**
 * Prisma Client JS version: 5.22.0
 * Query Engine version: 605197351a3c8bdd595af2d2a9bc3025bca48ea2
 */
Prisma.prismaVersion = {
  client: "5.22.0",
  engine: "605197351a3c8bdd595af2d2a9bc3025bca48ea2"
}

Prisma.PrismaClientKnownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientKnownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientUnknownRequestError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientRustPanicError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientRustPanicError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientInitializationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientInitializationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.PrismaClientValidationError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`PrismaClientValidationError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.NotFoundError = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`NotFoundError is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */
Prisma.sql = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`sqltag is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.empty = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`empty is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.join = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`join is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.raw = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`raw is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.validator = Public.validator

/**
* Extensions
*/
Prisma.getExtensionContext = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.getExtensionContext is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}
Prisma.defineExtension = () => {
  const runtimeName = getRuntime().prettyName;
  throw new Error(`Extensions.defineExtension is unable to run in this browser environment, or has been bundled for the browser (running in ${runtimeName}).
In case this error is unexpected for you, please report it in https://pris.ly/prisma-prisma-bug-report`,
)}

/**
 * Shorthand utilities for JSON filtering
 */
Prisma.DbNull = objectEnumValues.instances.DbNull
Prisma.JsonNull = objectEnumValues.instances.JsonNull
Prisma.AnyNull = objectEnumValues.instances.AnyNull

Prisma.NullTypes = {
  DbNull: objectEnumValues.classes.DbNull,
  JsonNull: objectEnumValues.classes.JsonNull,
  AnyNull: objectEnumValues.classes.AnyNull
}



/**
 * Enums
 */

exports.Prisma.TransactionIsolationLevel = makeStrictEnum({
  ReadUncommitted: 'ReadUncommitted',
  ReadCommitted: 'ReadCommitted',
  RepeatableRead: 'RepeatableRead',
  Serializable: 'Serializable'
});

exports.Prisma.Actualite_imagesScalarFieldEnum = {
  id: 'id',
  actualite_id: 'actualite_id',
  image_url: 'image_url'
};

exports.Prisma.ActualitesScalarFieldEnum = {
  id: 'id',
  title: 'title',
  content: 'content',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.AxesScalarFieldEnum = {
  id: 'id',
  plan_id: 'plan_id',
  name: 'name',
  description: 'description',
  statut: 'statut',
  objectif: 'objectif',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.Category_userScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.CommentairesScalarFieldEnum = {
  id: 'id',
  project_id: 'project_id',
  compte_id: 'compte_id',
  content: 'content',
  created_at: 'created_at'
};

exports.Prisma.ComptesScalarFieldEnum = {
  id: 'id',
  username: 'username',
  password: 'password',
  role_id: 'role_id',
  validity: 'validity',
  user_id: 'user_id'
};

exports.Prisma.DocumentsScalarFieldEnum = {
  id: 'id',
  project_id: 'project_id',
  name: 'name',
  file_path: 'file_path',
  uploaded_at: 'uploaded_at'
};

exports.Prisma.EvaluationsScalarFieldEnum = {
  id: 'id',
  indicator_id: 'indicator_id',
  evaluation_date: 'evaluation_date',
  value: 'value',
  comment: 'comment'
};

exports.Prisma.GroupesScalarFieldEnum = {
  id: 'id',
  nom: 'nom'
};

exports.Prisma.IndicateursScalarFieldEnum = {
  id: 'id',
  project_id: 'project_id',
  name: 'name',
  description: 'description',
  unit: 'unit',
  baseline_value: 'baseline_value',
  target_value: 'target_value',
  current_value: 'current_value',
  latitude: 'latitude',
  longitude: 'longitude',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.GroupesUtilisateursScalarFieldEnum = {
  groupe_id: 'groupe_id',
  utilisateur_id: 'utilisateur_id'
};

exports.Prisma.NewsletterScalarFieldEnum = {
  id: 'id',
  title: 'title',
  body: 'body',
  posted_by: 'posted_by',
  created_date: 'created_date',
  last_updated: 'last_updated',
  newsletter_statut: 'newsletter_statut'
};

exports.Prisma.PermissionsScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.Plans_actionScalarFieldEnum = {
  id: 'id',
  name: 'name',
  description: 'description',
  objectif: 'objectif',
  start_date: 'start_date',
  end_date: 'end_date',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.PriorityScalarFieldEnum = {
  id: 'id',
  name: 'name',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.Projet_groupesScalarFieldEnum = {
  projet_id: 'projet_id',
  groupe_id: 'groupe_id'
};

exports.Prisma.Projet_utilisateursScalarFieldEnum = {
  projet_id: 'projet_id',
  utilisateur_id: 'utilisateur_id'
};

exports.Prisma.ProjetsScalarFieldEnum = {
  id: 'id',
  axe_id: 'axe_id',
  priority_id: 'priority_id',
  manager: 'manager',
  name: 'name',
  description: 'description',
  objectif: 'objectif',
  statut: 'statut',
  budget: 'budget',
  start_date: 'start_date',
  end_date: 'end_date',
  created_date: 'created_date',
  last_updated: 'last_updated',
  target_value: 'target_value',
  current_value: 'current_value'
};

exports.Prisma.RessourcesScalarFieldEnum = {
  id: 'id',
  project_id: 'project_id',
  name: 'name',
  description: 'description',
  quantity: 'quantity',
  unit: 'unit',
  cost: 'cost'
};

exports.Prisma.Role_permissionsScalarFieldEnum = {
  role_id: 'role_id',
  permission_id: 'permission_id'
};

exports.Prisma.RolesScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  created_date: 'created_date',
  last_updated: 'last_updated'
};

exports.Prisma.SuggestionsScalarFieldEnum = {
  id: 'id',
  compte_id: 'compte_id',
  project_id: 'project_id',
  suggestion_content: 'suggestion_content',
  submitted_at: 'submitted_at'
};

exports.Prisma.Tache_assignations_groupesScalarFieldEnum = {
  tache_id: 'tache_id',
  groupe_id: 'groupe_id'
};

exports.Prisma.Tache_assignations_utilisateursScalarFieldEnum = {
  tache_id: 'tache_id',
  utilisateur_id: 'utilisateur_id'
};

exports.Prisma.TachesScalarFieldEnum = {
  id: 'id',
  libelle: 'libelle',
  description: 'description',
  dateDebut: 'dateDebut',
  dateFin: 'dateFin',
  projet_id: 'projet_id',
  utilisateur_id: 'utilisateur_id',
  statut: 'statut',
  priorite: 'priorite',
  dateCreation: 'dateCreation',
  dateMiseAJour: 'dateMiseAJour',
  delaiEstime: 'delaiEstime',
  delaiReel: 'delaiReel',
  commentaires: 'commentaires',
  tacheParentId: 'tacheParentId'
};

exports.Prisma.UtilisateursScalarFieldEnum = {
  id: 'id',
  nom: 'nom',
  prenom: 'prenom',
  email: 'email',
  category_id: 'category_id',
  created_at: 'created_at'
};

exports.Prisma.VotesScalarFieldEnum = {
  id: 'id',
  compte_id: 'compte_id',
  vote_value: 'vote_value',
  voted_at: 'voted_at'
};

exports.Prisma.NotificationsScalarFieldEnum = {
  id: 'id',
  titre: 'titre',
  message: 'message',
  type: 'type',
  isRead: 'isRead',
  createdAt: 'createdAt',
  userId: 'userId',
  groupeId: 'groupeId'
};

exports.Prisma.SortOrder = {
  asc: 'asc',
  desc: 'desc'
};

exports.Prisma.NullsOrder = {
  first: 'first',
  last: 'last'
};
exports.comptes_validity = exports.$Enums.comptes_validity = {
  D: 'D',
  Y: 'Y',
  N: 'N'
};

exports.Prisma.ModelName = {
  actualite_images: 'actualite_images',
  actualites: 'actualites',
  axes: 'axes',
  category_user: 'category_user',
  commentaires: 'commentaires',
  comptes: 'comptes',
  documents: 'documents',
  evaluations: 'evaluations',
  groupes: 'groupes',
  indicateurs: 'indicateurs',
  GroupesUtilisateurs: 'GroupesUtilisateurs',
  newsletter: 'newsletter',
  permissions: 'permissions',
  plans_action: 'plans_action',
  priority: 'priority',
  projet_groupes: 'projet_groupes',
  projet_utilisateurs: 'projet_utilisateurs',
  projets: 'projets',
  ressources: 'ressources',
  role_permissions: 'role_permissions',
  roles: 'roles',
  suggestions: 'suggestions',
  tache_assignations_groupes: 'tache_assignations_groupes',
  tache_assignations_utilisateurs: 'tache_assignations_utilisateurs',
  taches: 'taches',
  utilisateurs: 'utilisateurs',
  votes: 'votes',
  notifications: 'notifications'
};

/**
 * This is a stub Prisma Client that will error at runtime if called.
 */
class PrismaClient {
  constructor() {
    return new Proxy(this, {
      get(target, prop) {
        let message
        const runtime = getRuntime()
        if (runtime.isEdge) {
          message = `PrismaClient is not configured to run in ${runtime.prettyName}. In order to run Prisma Client on edge runtime, either:
- Use Prisma Accelerate: https://pris.ly/d/accelerate
- Use Driver Adapters: https://pris.ly/d/driver-adapters
`;
        } else {
          message = 'PrismaClient is unable to run in this browser environment, or has been bundled for the browser (running in `' + runtime.prettyName + '`).'
        }
        
        message += `
If this is unexpected, please open an issue: https://pris.ly/prisma-prisma-bug-report`

        throw new Error(message)
      }
    })
  }
}

exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
